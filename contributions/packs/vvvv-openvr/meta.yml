### YamlMime:ContributionMeta
---
uid: "contribution/vvvv.openvr-meta"
type: "pack"
author: "tonfilm"
date: "01 Aug, 2016"
title: "VVVV.OpenVR"
originalURL: "contribution/vvvv.openvr"
category: "pack"
like_count: "25"
imported: "true"
teaser: |-
  1. VVVV.OpenVR
  
  The OpenVR pack contains nodes to get pose data and render a 3D scene into any VR headset supported by SteamVR. Currently HTC Vive, Vive Pro, Oculus Rift DK1, DK2 and CV1. Basically, all headsets supported by SteamVR.
  
  **Commissioned** by Marshmallow Laser Feast:
  http://marshmallowlaserfeast.com/
  
  **Special thanks** goes to these members of the vvvv community who also supported its development with various amounts:
  
  <!--{SPLIT()}-->
  Chris Engler
  [/businesses/wirmachenbunt](https://vvvv.org/businesses/wirmachenbunt)
  Hamburg, Germany
  
  Paul Scheytt
  [/businesses/decode](https://vvvv.org/businesses/decode)
  Hamburg, Germany
  
  [ggml](http://vvvv.org/users/ggml)
  http://cote.ggml.ro/
  Bucharest, Romania
  
  Andres Alvarez
  [andresc4](http://vvvv.org/users/andresc4)
  Rosario, Argentina
  
  Thomas Bouaziz 
  [/businesses/experienss](/businesses/experienss)
  Paris, France
  
  <!--~~~-->
  Louis Mustill & Will Young
  [mrboni](http://vvvv.org/users/mrboni)
  London, UK
  
  [colorsound](http://vvvv.org/users/colorsound)
  [/businesses/colorsound-ixd](/businesses/colorsound-ixd)
  Granada, Spain
  
  schnellebuntebilder
  [/businesses/schnellebuntebilder](https://vvvv.org/businesses/schnellebuntebilder)
  Berlin, Germany
  
  Eno Henze
  [/businesses/nsynk](https://vvvv.org/businesses/nsynk-gesellschaft-f%C3%BCr-kunst-und-technik)
  Frankfurt/Main, Germany
  
  Christoph Schmid [knaif](http://vvvv.org/users/knaif)
  www.lichterloh.tv 
  Vienna, Austria
  
  <!--{SPLIT}-->
  
  ### Code Contributions
  
  * additions to controller nodes by [herbst](http://vvvv.org/users/herbst)
  * trigger haptic pulse by [sebl](http://vvvv.org/users/sebl)
  * disable wait for sync [microdee](http://vvvv.org/users/microdee)
  
  ### Nodes
  
  **Poser (OpenVR)** returns all tracking poses from the headset, lighthouse stations, trackers and controllers as transformation. Also has a pin to disable wait for OpenVR sync, but the sync needs to run a few times in startup to get the compositor up and running.
  
  **Camera (OpenVR)** calculates vvvv conform view and projection matrices for the left/right eye. It also outputs the recommended texture size and a hidden area mesh that masks out unnecessary pixels to safe shader performance.
  
  **Compositor (OpenVR)** receives a texture handle and submits it to the HMD.
  
  **TrackedDevices (OpenVR)** outputs all OpenVR events and an object oriented view on the tracked devices. Might be merged with Poser in the future.
  
  **Controller (OpenVR Split)** splits a tracked controller from the TrackedDevices node into pose transformation, trackpad axis and all button states.
  
  ### Modules
  
  **Renderer (OpenVR DX11)** Combines Camera and Compositor into one handy node that only needs a layer to be rendered. It exposes quality settings and returns the rendered texture for preview.
  
  **HiddenArea (OpenVR DX11.Layer Viewport)** constructs the hidden area mesh to cast out unnecessary pixels.
  
  **ViveController (OpenVR DX11.Layer)** renders a life-like model of the vive controller. It gives a pretty good eye-hand coordination feeling when seeing the actual controller in VR.
  
  **ViveLighthouse (OpenVR DX11.Layer)** renders a life-like model of the vive lighthouse tracking station.
  
  **HMD (OpenVR DX11.Layer)** renders a life-like model of a generic VR headset, helps to build a third person overview on the scene.
  
  ### Vive Trackers
  
  Latest version has **tracker only support**, read this blog post on how to set it up: [using-htc-vive-trackers-without-headset](/blog/using-htc-vive-trackers-without-headset)
  
  ### Learning
  
  Here is a nice set of patches from the OpenVR beginner workshop from NODE17:
  [node17-openvr-beginner-material](xref:contribution/node17-openvr-beginner-material)
  
  ### Setup
  
  - Make sure the [DX11 pack](xref:contribution/directx11-nodes) is installed
  - Place the VVVV.OpenVR folder into vvvv's packs folder
  - Use SteamVR to calibrate your room
  - Start the patch 01_OpenVRDemo.v4p in the \girlpower folder to test the setup
  
  ### Github
  
  Sources are available here:
  https://github.com/tebjan/VVVV.OpenVR
  
  If you encounter bugs, then github issues instead of comments are welcome:
  https://github.com/tebjan/VVVV.OpenVR/issues
